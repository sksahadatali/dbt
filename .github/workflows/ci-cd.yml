name: CI/CD for dbt Project - Modified Models Only

on:
  push:
    branches:
      - master  # Run the workflow on push to the 'master' branch
    paths:
      - 'models/**'               # Trigger only when models change
      - 'dbt_project.yml'          # Trigger when the dbt project configuration changes
      - 'macros/**'                # Trigger when macros are modified
  pull_request:
    branches:
      - master  # Run the workflow for PRs to the 'master' branch
    paths:
      - 'models/**'
      - 'dbt_project.yml'
      - 'macros/**'

jobs:
  dbt-build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Python (dbt is a Python package)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'  # Use Python 3.8 or any other compatible version

    # Step 3: Install dbt and required packages
    - name: Install dbt
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-snowflake  # Adjust based on your dbt adapter (e.g., dbt-postgres)

    # Step 4: Download the previous state (target directory) from GitHub artifacts
    - name: Download dbt target directory from previous run
      uses: actions/download-artifact@v2
      with:
        name: dbt-target  # The artifact name used in previous runs
        path: target/     # The path to restore the target directory

    # Step 5: Run dbt models (only changed models and their dependencies)
    - name: Run dbt models (changed models only)
      run: |
        dbt deps  # Ensure dependencies are installed
        dbt seed  # Seed static data (optional, if you use seeds)
        dbt run --select state:modified+ --state target/  # Run modified models and their dependencies

    # Step 6: Run dbt tests (only changed models)
    - name: Run dbt tests (changed models only)
      run: dbt test --select state:modified+ --state target/  # Test modified models only

    # Step 7: Upload the target directory (to track state for the next run)
    - name: Upload dbt target directory
      uses: actions/upload-artifact@v2
      with:
        name: dbt-target  # The name of the artifact
        path: target/     # Upload the target directory
